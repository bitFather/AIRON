//
// Grid system
// --------------------------------------------------


// Container widths
//
// Set the container width, and override it for fixed navbars in media queries.

.container {
  width: 100%;
  margin-right: auto;
  margin-left: auto;
  padding: 0 @grid-gutter-width*2.5;
  &:extend(.clearfix all);
  @media screen and (max-width: @screen-lg) {
    padding: 0 3%;
  }
  .mobile-menu {
    display: none;
    margin: auto;
    background-color: #ffffff00;
    border-color: #ffffff00;
    padding: .75rem .5rem;
    @media screen and (max-width: @screen-sm) {
      display: inline-block;
      margin: 10px 5px auto auto;
      float: right;
      &:hover{

      }
      span {
        position: relative;
        border-bottom: 4px solid #FFFFFF;
        width: 24px;
        height: 3px;
        display: block;

        &:before, &:after {
          position: absolute;
          content: '';
          max-width: 24px;
          height: 4px;
          background: #FFFFFF;
          left: 0;
          right: 0;
        }
        &:before {
          top: -10px
        }
        &:after {
          bottom: -14px;
        }
      }
    }
  }
}


// Fluid container
//
// Utilizes the mixin meant for fixed width containers, but without any defined
// width for fluid, full width layouts.

.container-fluid {
  .container-fixed();
}


// Row
//
// Rows contain and clear the floats of your columns.

.row {
  .make-row();
}


// Columns
//
// Common styles for small and large grid columns

.make-grid-columns();


// Extra small grid
//
// Columns, offsets, pushes, and pulls for extra small devices like
// smartphones.

.make-grid(xs);


// Small grid
//
// Columns, offsets, pushes, and pulls for the small device range, from phones
// to tablets.

@media (min-width: @screen-sm-min) {
  .make-grid(sm);
}


// Medium grid
//
// Columns, offsets, pushes, and pulls for the desktop device range.

@media (min-width: @screen-md-min) {
  .make-grid(md);
}


// Large grid
//
// Columns, offsets, pushes, and pulls for the large desktop device range.

@media (min-width: @screen-lg-min) {
  .make-grid(lg);
}
